{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\victo\\\\OneDrive\\\\Documents\\\\Smarte_projekter\\\\asset_tracker_v2\\\\frontend\\\\src\\\\pages\\\\Geofencing.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { MapContainer, TileLayer, FeatureGroup, Circle } from 'react-leaflet';\nimport { EditControl } from \"react-leaflet-draw\";\nimport axios from 'axios';\nimport 'leaflet/dist/leaflet.css';\nimport 'leaflet-draw/dist/leaflet.draw.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://localhost:3000/api';\nfunction Geofencing() {\n  _s();\n  const [geofences, setGeofences] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const leafletToGeofenceIds = useRef({});\n  useEffect(() => {\n    const fetchGeofences = async () => {\n      try {\n        const response = await axios.get(`${API_BASE_URL}/geofences`);\n        console.log('Fetched geofences:', response.data);\n        setGeofences(response.data);\n        setLoading(false);\n      } catch (err) {\n        console.error('Error fetching geofences:', err);\n        setError('Error fetching geofences. Please try again later.');\n        setLoading(false);\n      }\n    };\n    fetchGeofences();\n  }, []);\n  const logMappings = () => {\n    console.log('Current leafletToGeofenceIds mapping:', leafletToGeofenceIds.current);\n  };\n  const handleCreated = async e => {\n    const {\n      layer\n    } = e;\n    const {\n      _latlng,\n      _mRadius\n    } = layer;\n    const newGeofence = {\n      center: _latlng,\n      radius: _mRadius\n    };\n    try {\n      const response = await axios.post(`${API_BASE_URL}/geofences`, newGeofence);\n      const createdGeofence = response.data;\n      setGeofences(prevGeofences => [...prevGeofences, createdGeofence]);\n      leafletToGeofenceIds.current[layer._leaflet_id] = createdGeofence.id;\n      console.log('Created geofence mapping:', layer._leaflet_id, '->', createdGeofence.id);\n      logMappings();\n    } catch (err) {\n      console.error('Error creating geofence:', err);\n      setError('Error creating geofence. Please try again.');\n    }\n  };\n  const handleEdited = async e => {\n    const {\n      layers\n    } = e;\n    console.log('Editing layers:', layers);\n    layers.eachLayer(async layer => {\n      const {\n        _latlng,\n        _mRadius,\n        _leaflet_id\n      } = layer;\n      console.log('Editing layer:', _leaflet_id, 'with latlng:', _latlng, 'and radius:', _mRadius);\n      const geofenceId = leafletToGeofenceIds.current[_leaflet_id];\n      console.log('Corresponding geofence ID:', geofenceId);\n      if (geofenceId === undefined) {\n        console.error('Geofence ID is undefined for Leaflet ID:', _leaflet_id);\n        setError('Error updating geofence: ID not found');\n        return;\n      }\n      const updatedGeofence = {\n        center: _latlng,\n        radius: _mRadius\n      };\n      try {\n        await axios.put(`${API_BASE_URL}/geofences/${geofenceId}`, updatedGeofence);\n        setGeofences(prevGeofences => prevGeofences.map(g => g.id === geofenceId ? {\n          ...g,\n          ...updatedGeofence\n        } : g));\n        console.log('Successfully updated geofence:', geofenceId);\n      } catch (err) {\n        console.error('Error updating geofence:', err);\n        setError('Error updating geofence. Please try again.');\n      }\n    });\n    logMappings();\n  };\n  const handleDeleted = async e => {\n    const {\n      layers\n    } = e;\n    layers.eachLayer(async layer => {\n      const {\n        _leaflet_id\n      } = layer;\n      const geofenceId = leafletToGeofenceIds.current[_leaflet_id];\n      console.log('Deleting geofence:', _leaflet_id, '->', geofenceId);\n      if (geofenceId === undefined) {\n        console.error('Geofence ID is undefined for Leaflet ID:', _leaflet_id);\n        setError('Error deleting geofence: ID not found');\n        return;\n      }\n      try {\n        await axios.delete(`${API_BASE_URL}/geofences/${geofenceId}`);\n        setGeofences(prevGeofences => prevGeofences.filter(g => g.id !== geofenceId));\n        delete leafletToGeofenceIds.current[_leaflet_id];\n        console.log('Successfully deleted geofence:', geofenceId);\n      } catch (err) {\n        console.error('Error deleting geofence:', err);\n        setError('Error deleting geofence. Please try again.');\n      }\n    });\n    logMappings();\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Geofencing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-container\",\n      children: /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: [55.828282, 10.605460],\n        zoom: 7,\n        style: {\n          height: '800px',\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          url: \"https://api.maptiler.com/maps/hybrid/{z}/{x}/{y}.jpg?key=jqMrtdwJOEd6ITEcglsi\",\n          attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FeatureGroup, {\n          children: [/*#__PURE__*/_jsxDEV(EditControl, {\n            position: \"topright\",\n            onCreated: handleCreated,\n            onEdited: handleEdited,\n            onDeleted: handleDeleted,\n            draw: {\n              rectangle: false,\n              polygon: false,\n              polyline: false,\n              marker: false,\n              circlemarker: false\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), geofences.map(geofence => geofence && geofence.center && /*#__PURE__*/_jsxDEV(Circle, {\n            center: [parseFloat(geofence.center.lat) || 0, parseFloat(geofence.center.lng) || 0],\n            radius: parseFloat(geofence.radius) || 0,\n            ref: ref => {\n              if (ref) {\n                leafletToGeofenceIds.current[ref._leaflet_id] = geofence.id;\n                console.log('Set geofence mapping:', ref._leaflet_id, '->', geofence.id);\n              }\n            }\n          }, geofence.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Geofences:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: geofences.map(geofence => geofence && geofence.center && /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"ID: \", geofence.id, \" - Center: \", parseFloat(geofence.center.lat).toFixed(6), \", \", parseFloat(geofence.center.lng).toFixed(6), \" - Radius: \", parseFloat(geofence.radius).toFixed(2), \"m\"]\n        }, geofence.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n}\n_s(Geofencing, \"pWEv8l4TTC3F1oCRJKUoOmvzUTA=\");\n_c = Geofencing;\nexport default Geofencing;\nvar _c;\n$RefreshReg$(_c, \"Geofencing\");","map":{"version":3,"names":["React","useState","useEffect","useRef","MapContainer","TileLayer","FeatureGroup","Circle","EditControl","axios","jsxDEV","_jsxDEV","API_BASE_URL","Geofencing","_s","geofences","setGeofences","loading","setLoading","error","setError","leafletToGeofenceIds","fetchGeofences","response","get","console","log","data","err","logMappings","current","handleCreated","e","layer","_latlng","_mRadius","newGeofence","center","radius","post","createdGeofence","prevGeofences","_leaflet_id","id","handleEdited","layers","eachLayer","geofenceId","undefined","updatedGeofence","put","map","g","handleDeleted","delete","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","className","zoom","style","height","width","url","attribution","position","onCreated","onEdited","onDeleted","draw","rectangle","polygon","polyline","marker","circlemarker","geofence","parseFloat","lat","lng","ref","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/victo/OneDrive/Documents/Smarte_projekter/asset_tracker_v2/frontend/src/pages/Geofencing.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { MapContainer, TileLayer, FeatureGroup, Circle } from 'react-leaflet';\r\nimport { EditControl } from \"react-leaflet-draw\";\r\nimport axios from 'axios';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport 'leaflet-draw/dist/leaflet.draw.css';\r\n\r\nconst API_BASE_URL = 'http://localhost:3000/api';\r\n\r\nfunction Geofencing() {\r\n  const [geofences, setGeofences] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const leafletToGeofenceIds = useRef({});\r\n\r\n  useEffect(() => {\r\n    const fetchGeofences = async () => {\r\n      try {\r\n        const response = await axios.get(`${API_BASE_URL}/geofences`);\r\n        console.log('Fetched geofences:', response.data);\r\n        setGeofences(response.data);\r\n        setLoading(false);\r\n      } catch (err) {\r\n        console.error('Error fetching geofences:', err);\r\n        setError('Error fetching geofences. Please try again later.');\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchGeofences();\r\n  }, []);\r\n\r\n  const logMappings = () => {\r\n    console.log('Current leafletToGeofenceIds mapping:', leafletToGeofenceIds.current);\r\n  };\r\n\r\n  const handleCreated = async (e) => {\r\n    const { layer } = e;\r\n    const { _latlng, _mRadius } = layer;\r\n    const newGeofence = { center: _latlng, radius: _mRadius };\r\n    \r\n    try {\r\n      const response = await axios.post(`${API_BASE_URL}/geofences`, newGeofence);\r\n      const createdGeofence = response.data;\r\n      setGeofences(prevGeofences => [...prevGeofences, createdGeofence]);\r\n      leafletToGeofenceIds.current[layer._leaflet_id] = createdGeofence.id;\r\n      console.log('Created geofence mapping:', layer._leaflet_id, '->', createdGeofence.id);\r\n      logMappings();\r\n    } catch (err) {\r\n      console.error('Error creating geofence:', err);\r\n      setError('Error creating geofence. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleEdited = async (e) => {\r\n    const { layers } = e;\r\n    console.log('Editing layers:', layers);\r\n    layers.eachLayer(async (layer) => {\r\n      const { _latlng, _mRadius, _leaflet_id } = layer;\r\n      console.log('Editing layer:', _leaflet_id, 'with latlng:', _latlng, 'and radius:', _mRadius);\r\n      const geofenceId = leafletToGeofenceIds.current[_leaflet_id];\r\n      console.log('Corresponding geofence ID:', geofenceId);\r\n      \r\n      if (geofenceId === undefined) {\r\n        console.error('Geofence ID is undefined for Leaflet ID:', _leaflet_id);\r\n        setError('Error updating geofence: ID not found');\r\n        return;\r\n      }\r\n\r\n      const updatedGeofence = { center: _latlng, radius: _mRadius };\r\n      \r\n      try {\r\n        await axios.put(`${API_BASE_URL}/geofences/${geofenceId}`, updatedGeofence);\r\n        setGeofences(prevGeofences => \r\n          prevGeofences.map(g => g.id === geofenceId ? { ...g, ...updatedGeofence } : g)\r\n        );\r\n        console.log('Successfully updated geofence:', geofenceId);\r\n      } catch (err) {\r\n        console.error('Error updating geofence:', err);\r\n        setError('Error updating geofence. Please try again.');\r\n      }\r\n    });\r\n    logMappings();\r\n  };\r\n\r\n  const handleDeleted = async (e) => {\r\n    const { layers } = e;\r\n    layers.eachLayer(async (layer) => {\r\n      const { _leaflet_id } = layer;\r\n      const geofenceId = leafletToGeofenceIds.current[_leaflet_id];\r\n      console.log('Deleting geofence:', _leaflet_id, '->', geofenceId);\r\n      \r\n      if (geofenceId === undefined) {\r\n        console.error('Geofence ID is undefined for Leaflet ID:', _leaflet_id);\r\n        setError('Error deleting geofence: ID not found');\r\n        return;\r\n      }\r\n      \r\n      try {\r\n        await axios.delete(`${API_BASE_URL}/geofences/${geofenceId}`);\r\n        setGeofences(prevGeofences => prevGeofences.filter(g => g.id !== geofenceId));\r\n        delete leafletToGeofenceIds.current[_leaflet_id];\r\n        console.log('Successfully deleted geofence:', geofenceId);\r\n      } catch (err) {\r\n        console.error('Error deleting geofence:', err);\r\n        setError('Error deleting geofence. Please try again.');\r\n      }\r\n    });\r\n    logMappings();\r\n  };\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n  if (error) return <div>{error}</div>;\r\n\r\n  return (\r\n    <div>\r\n      <h1>Geofencing</h1>\r\n      <div className=\"map-container\">\r\n        <MapContainer center={[55.828282, 10.605460]} zoom={7} style={{ height: '800px', width: '100%' }}>\r\n          <TileLayer\r\n            url=\"https://api.maptiler.com/maps/hybrid/{z}/{x}/{y}.jpg?key=jqMrtdwJOEd6ITEcglsi\"\r\n            attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n          />\r\n          <FeatureGroup>\r\n            <EditControl\r\n              position=\"topright\"\r\n              onCreated={handleCreated}\r\n              onEdited={handleEdited}\r\n              onDeleted={handleDeleted}\r\n              draw={{\r\n                rectangle: false,\r\n                polygon: false,\r\n                polyline: false,\r\n                marker: false,\r\n                circlemarker: false,\r\n              }}\r\n            />\r\n            {geofences.map((geofence) => (\r\n              geofence && geofence.center && (\r\n                <Circle \r\n                  key={geofence.id} \r\n                  center={[parseFloat(geofence.center.lat) || 0, parseFloat(geofence.center.lng) || 0]} \r\n                  radius={parseFloat(geofence.radius) || 0} \r\n                  ref={(ref) => {\r\n                    if (ref) {\r\n                      leafletToGeofenceIds.current[ref._leaflet_id] = geofence.id;\r\n                      console.log('Set geofence mapping:', ref._leaflet_id, '->', geofence.id);\r\n                    }\r\n                  }}\r\n                />\r\n              )\r\n            ))}\r\n          </FeatureGroup>\r\n        </MapContainer>\r\n      </div>\r\n      <div>\r\n        <h2>Geofences:</h2>\r\n        <ul>\r\n          {geofences.map((geofence) => (\r\n            geofence && geofence.center && (\r\n              <li key={geofence.id}>\r\n                ID: {geofence.id} - \r\n                Center: {parseFloat(geofence.center.lat).toFixed(6)}, {parseFloat(geofence.center.lng).toFixed(6)} - \r\n                Radius: {parseFloat(geofence.radius).toFixed(2)}m\r\n              </li>\r\n            )\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Geofencing;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}