{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\victo\\\\OneDrive\\\\Documents\\\\Smarte_projekter\\\\asset_tracker_v2\\\\frontend\\\\src\\\\pages\\\\HistoricalView.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { MapContainer, TileLayer, Polyline } from 'react-leaflet';\nimport axios from 'axios';\nimport 'leaflet/dist/leaflet.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HistoricalView() {\n  _s();\n  const [devices, setDevices] = useState([]);\n  const [selectedDevice, setSelectedDevice] = useState(null);\n  const [historicalData, setHistoricalData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchDevices = async () => {\n      try {\n        const response = await axios.get('http://localhost:3000/api/devices');\n        setDevices(response.data);\n        setLoading(false);\n      } catch (err) {\n        setError('Error fetching devices. Please try again later.');\n        setLoading(false);\n      }\n    };\n    fetchDevices();\n  }, []);\n  const fetchHistoricalData = async deviceId => {\n    try {\n      const response = await axios.get(`http://localhost:3000/api/devices/${deviceId}/history`);\n      setHistoricalData(response.data);\n    } catch (err) {\n      setError('Error fetching historical data. Please try again later.');\n    }\n  };\n  const handleDeviceSelect = event => {\n    const deviceId = event.target.value;\n    setSelectedDevice(deviceId);\n    if (deviceId) {\n      fetchHistoricalData(deviceId);\n    } else {\n      setHistoricalData([]);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 21\n  }, this);\n  const positions = historicalData.map(point => [point.latitude, point.longitude]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Historical View\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: handleDeviceSelect,\n      value: selectedDevice || '',\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select a device\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), devices.map(device => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: device.id,\n        children: device.name\n      }, device.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), selectedDevice && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-container\",\n      children: /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: positions[0] || [51.1657, 10.4515],\n        zoom: 6,\n        style: {\n          height: '600px',\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          url: \"https://api.maptiler.com/maps/hybrid/{z}/{x}/{y}.jpg?key=jqMrtdwJOEd6ITEcglsi\",\n          attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Polyline, {\n          positions: positions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(HistoricalView, \"hYGqmnroG3Qmh/veNEO8Wi9wI70=\");\n_c = HistoricalView;\nexport default HistoricalView;\nvar _c;\n$RefreshReg$(_c, \"HistoricalView\");","map":{"version":3,"names":["React","useState","useEffect","MapContainer","TileLayer","Polyline","axios","jsxDEV","_jsxDEV","HistoricalView","_s","devices","setDevices","selectedDevice","setSelectedDevice","historicalData","setHistoricalData","loading","setLoading","error","setError","fetchDevices","response","get","data","err","fetchHistoricalData","deviceId","handleDeviceSelect","event","target","value","children","fileName","_jsxFileName","lineNumber","columnNumber","positions","map","point","latitude","longitude","onChange","device","id","name","className","center","zoom","style","height","width","url","attribution","_c","$RefreshReg$"],"sources":["C:/Users/victo/OneDrive/Documents/Smarte_projekter/asset_tracker_v2/frontend/src/pages/HistoricalView.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { MapContainer, TileLayer, Polyline } from 'react-leaflet';\r\nimport axios from 'axios';\r\nimport 'leaflet/dist/leaflet.css';\r\n\r\nfunction HistoricalView() {\r\n  const [devices, setDevices] = useState([]);\r\n  const [selectedDevice, setSelectedDevice] = useState(null);\r\n  const [historicalData, setHistoricalData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchDevices = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:3000/api/devices');\r\n        setDevices(response.data);\r\n        setLoading(false);\r\n      } catch (err) {\r\n        setError('Error fetching devices. Please try again later.');\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchDevices();\r\n  }, []);\r\n\r\n  const fetchHistoricalData = async (deviceId) => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:3000/api/devices/${deviceId}/history`);\r\n      setHistoricalData(response.data);\r\n    } catch (err) {\r\n      setError('Error fetching historical data. Please try again later.');\r\n    }\r\n  };\r\n\r\n  const handleDeviceSelect = (event) => {\r\n    const deviceId = event.target.value;\r\n    setSelectedDevice(deviceId);\r\n    if (deviceId) {\r\n      fetchHistoricalData(deviceId);\r\n    } else {\r\n      setHistoricalData([]);\r\n    }\r\n  };\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n  if (error) return <div>{error}</div>;\r\n\r\n  const positions = historicalData.map(point => [point.latitude, point.longitude]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Historical View</h1>\r\n      <select onChange={handleDeviceSelect} value={selectedDevice || ''}>\r\n        <option value=\"\">Select a device</option>\r\n        {devices.map(device => (\r\n          <option key={device.id} value={device.id}>{device.name}</option>\r\n        ))}\r\n      </select>\r\n      {selectedDevice && (\r\n        <div className=\"map-container\">\r\n          <MapContainer center={positions[0] || [51.1657, 10.4515]} zoom={6} style={{ height: '600px', width: '100%' }}>\r\n            <TileLayer\r\n              url=\"https://api.maptiler.com/maps/hybrid/{z}/{x}/{y}.jpg?key=jqMrtdwJOEd6ITEcglsi\"\r\n              attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n            />\r\n            <Polyline positions={positions} />\r\n          </MapContainer>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HistoricalView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}