{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\victo\\\\OneDrive\\\\Documents\\\\Smarte_projekter\\\\asset_tracker_v2\\\\frontend\\\\src\\\\pages\\\\HistoricalView.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { MapContainer, TileLayer, Polyline, Marker, Popup, FeatureGroup, Circle } from 'react-leaflet';\nimport axios from 'axios';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\nimport iconUrl from 'leaflet/dist/images/marker-icon.png';\nimport iconShadowUrl from 'leaflet/dist/images/marker-shadow.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://localhost:3000/api';\n\n// Define default icon\nlet DefaultIcon = L.icon({\n  iconUrl: iconUrl,\n  shadowUrl: iconShadowUrl,\n  iconAnchor: [12, 41]\n});\nconst getDeviceIcon = device => {\n  if (device.type === 'TypeA') {\n    return L.icon({\n      iconUrl: 'path/to/your/custom-icon-for-TypeA.png',\n      shadowUrl: iconShadowUrl,\n      iconAnchor: [12, 41]\n    });\n  } else if (device.type === 'TypeB') {\n    return L.icon({\n      iconUrl: 'path/to/your/custom-icon-for-TypeB.png',\n      shadowUrl: iconShadowUrl,\n      iconAnchor: [12, 41]\n    });\n  } else {\n    return DefaultIcon;\n  }\n};\nconst getGeofenceColor = type => {\n  return type === 'entering' ? 'blue' : 'orange';\n};\nfunction HistoricalView() {\n  _s();\n  const [devices, setDevices] = useState([]);\n  const [selectedDevice, setSelectedDevice] = useState(null);\n  const [historicalData, setHistoricalData] = useState([]);\n  const [geofences, setGeofences] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [mapCenter, setMapCenter] = useState([55.828282, 10.605460]);\n  const [mapZoom, setMapZoom] = useState(7);\n  useEffect(() => {\n    const fetchDevices = async () => {\n      try {\n        const response = await axios.get(`${API_BASE_URL}/devices`);\n        setDevices(response.data);\n        setLoading(false);\n      } catch (err) {\n        setError('Error fetching devices. Please try again later.');\n        setLoading(false);\n      }\n    };\n    const fetchGeofences = async () => {\n      try {\n        const response = await axios.get(`${API_BASE_URL}/geofences`);\n        setGeofences(response.data);\n      } catch (err) {\n        console.error('Error fetching geofences:', err);\n        setError('Error fetching geofences. Please try again later.');\n      }\n    };\n    fetchDevices();\n    fetchGeofences();\n  }, []);\n  useEffect(() => {\n    if (devices.length > 0) {\n      L.Icon.Default.imagePath = 'path/to/your/custom-icon-folder/';\n    }\n  }, [devices]);\n  const fetchHistoricalData = async deviceId => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/devices/${deviceId}/history`);\n      setHistoricalData(response.data);\n      adjustMapView(response.data);\n    } catch (err) {\n      setError('Error fetching historical data. Please try again later.');\n    }\n  };\n  const handleDeviceSelect = event => {\n    const deviceId = event.target.value;\n    setSelectedDevice(deviceId);\n    if (deviceId) {\n      fetchHistoricalData(deviceId);\n    } else {\n      setHistoricalData([]);\n      setMapCenter([55.828282, 10.605460]);\n      setMapZoom(7);\n    }\n  };\n  const adjustMapView = data => {\n    if (data.length > 0) {\n      const latitudes = data.map(point => point.latitude);\n      const longitudes = data.map(point => point.longitude);\n      const minLat = Math.min(...latitudes);\n      const maxLat = Math.max(...latitudes);\n      const minLng = Math.min(...longitudes);\n      const maxLng = Math.max(...longitudes);\n      setMapCenter([(minLat + maxLat) / 2, (minLng + maxLng) / 2]);\n      setMapZoom(10);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 21\n  }, this);\n  const positions = historicalData.map(point => [point.latitude, point.longitude]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Historical View\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: handleDeviceSelect,\n      value: selectedDevice || '',\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select a device\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), devices.map(device => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: device.id,\n        children: device.name\n      }, device.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-container\",\n      children: /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: mapCenter,\n        zoom: mapZoom,\n        style: {\n          height: '800px',\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          url: \"https://api.maptiler.com/maps/hybrid/{z}/{x}/{y}.jpg?key=jqMrtdwJOEd6ITEcglsi\",\n          attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), positions.length > 0 && /*#__PURE__*/_jsxDEV(Polyline, {\n          positions: positions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 36\n        }, this), historicalData.map((point, index) => {\n          const device = devices.find(d => d.id === selectedDevice);\n          return /*#__PURE__*/_jsxDEV(Marker, {\n            position: [point.latitude, point.longitude],\n            icon: device ? getDeviceIcon(device) : DefaultIcon,\n            children: /*#__PURE__*/_jsxDEV(Popup, {\n              children: [\"Timestamp: \", new Date(point.timestamp).toLocaleString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(FeatureGroup, {\n          children: geofences.map(geofence => geofence && geofence.center && /*#__PURE__*/_jsxDEV(Circle, {\n            center: [parseFloat(geofence.center.lat) || 0, parseFloat(geofence.center.lng) || 0],\n            radius: parseFloat(geofence.radius) || 0,\n            pathOptions: {\n              color: getGeofenceColor(geofence.type)\n            },\n            id: geofence.id,\n            children: /*#__PURE__*/_jsxDEV(Popup, {\n              children: [\"Geofence ID: \", geofence.id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 19\n            }, this)\n          }, geofence.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n}\n_s(HistoricalView, \"VSEi+rqE/WPK304IEz4hLol2G34=\");\n_c = HistoricalView;\nexport default HistoricalView;\nvar _c;\n$RefreshReg$(_c, \"HistoricalView\");","map":{"version":3,"names":["React","useState","useEffect","MapContainer","TileLayer","Polyline","Marker","Popup","FeatureGroup","Circle","axios","L","iconUrl","iconShadowUrl","jsxDEV","_jsxDEV","API_BASE_URL","DefaultIcon","icon","shadowUrl","iconAnchor","getDeviceIcon","device","type","getGeofenceColor","HistoricalView","_s","devices","setDevices","selectedDevice","setSelectedDevice","historicalData","setHistoricalData","geofences","setGeofences","loading","setLoading","error","setError","mapCenter","setMapCenter","mapZoom","setMapZoom","fetchDevices","response","get","data","err","fetchGeofences","console","length","Icon","Default","imagePath","fetchHistoricalData","deviceId","adjustMapView","handleDeviceSelect","event","target","value","latitudes","map","point","latitude","longitudes","longitude","minLat","Math","min","maxLat","max","minLng","maxLng","children","fileName","_jsxFileName","lineNumber","columnNumber","positions","onChange","id","name","className","center","zoom","style","height","width","url","attribution","index","find","d","position","Date","timestamp","toLocaleString","geofence","parseFloat","lat","lng","radius","pathOptions","color","_c","$RefreshReg$"],"sources":["C:/Users/victo/OneDrive/Documents/Smarte_projekter/asset_tracker_v2/frontend/src/pages/HistoricalView.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { MapContainer, TileLayer, Polyline, Marker, Popup, FeatureGroup, Circle } from 'react-leaflet';\r\nimport axios from 'axios';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport L from 'leaflet';\r\nimport iconUrl from 'leaflet/dist/images/marker-icon.png';\r\nimport iconShadowUrl from 'leaflet/dist/images/marker-shadow.png';\r\n\r\nconst API_BASE_URL = 'http://localhost:3000/api';\r\n\r\n// Define default icon\r\nlet DefaultIcon = L.icon({\r\n  iconUrl: iconUrl,\r\n  shadowUrl: iconShadowUrl,\r\n  iconAnchor: [12, 41],\r\n});\r\n\r\nconst getDeviceIcon = (device) => {\r\n  if (device.type === 'TypeA') {\r\n    return L.icon({\r\n      iconUrl: 'path/to/your/custom-icon-for-TypeA.png',\r\n      shadowUrl: iconShadowUrl,\r\n      iconAnchor: [12, 41],\r\n    });\r\n  } else if (device.type === 'TypeB') {\r\n    return L.icon({\r\n      iconUrl: 'path/to/your/custom-icon-for-TypeB.png',\r\n      shadowUrl: iconShadowUrl,\r\n      iconAnchor: [12, 41],\r\n    });\r\n  } else {\r\n    return DefaultIcon;\r\n  }\r\n};\r\n\r\nconst getGeofenceColor = (type) => {\r\n  return type === 'entering' ? 'blue' : 'orange';\r\n};\r\n\r\nfunction HistoricalView() {\r\n  const [devices, setDevices] = useState([]);\r\n  const [selectedDevice, setSelectedDevice] = useState(null);\r\n  const [historicalData, setHistoricalData] = useState([]);\r\n  const [geofences, setGeofences] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [mapCenter, setMapCenter] = useState([55.828282, 10.605460]);\r\n  const [mapZoom, setMapZoom] = useState(7);\r\n\r\n  useEffect(() => {\r\n    const fetchDevices = async () => {\r\n      try {\r\n        const response = await axios.get(`${API_BASE_URL}/devices`);\r\n        setDevices(response.data);\r\n        setLoading(false);\r\n      } catch (err) {\r\n        setError('Error fetching devices. Please try again later.');\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    const fetchGeofences = async () => {\r\n      try {\r\n        const response = await axios.get(`${API_BASE_URL}/geofences`);\r\n        setGeofences(response.data);\r\n      } catch (err) {\r\n        console.error('Error fetching geofences:', err);\r\n        setError('Error fetching geofences. Please try again later.');\r\n      }\r\n    };\r\n\r\n    fetchDevices();\r\n    fetchGeofences();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (devices.length > 0) {\r\n      L.Icon.Default.imagePath = 'path/to/your/custom-icon-folder/';\r\n    }\r\n  }, [devices]);\r\n\r\n  const fetchHistoricalData = async (deviceId) => {\r\n    try {\r\n      const response = await axios.get(`${API_BASE_URL}/devices/${deviceId}/history`);\r\n      setHistoricalData(response.data);\r\n      adjustMapView(response.data);\r\n    } catch (err) {\r\n      setError('Error fetching historical data. Please try again later.');\r\n    }\r\n  };\r\n\r\n  const handleDeviceSelect = (event) => {\r\n    const deviceId = event.target.value;\r\n    setSelectedDevice(deviceId);\r\n    if (deviceId) {\r\n      fetchHistoricalData(deviceId);\r\n    } else {\r\n      setHistoricalData([]);\r\n      setMapCenter([55.828282, 10.605460]);\r\n      setMapZoom(7);\r\n    }\r\n  };\r\n\r\n  const adjustMapView = (data) => {\r\n    if (data.length > 0) {\r\n      const latitudes = data.map(point => point.latitude);\r\n      const longitudes = data.map(point => point.longitude);\r\n      const minLat = Math.min(...latitudes);\r\n      const maxLat = Math.max(...latitudes);\r\n      const minLng = Math.min(...longitudes);\r\n      const maxLng = Math.max(...longitudes);\r\n      \r\n      setMapCenter([(minLat + maxLat) / 2, (minLng + maxLng) / 2]);\r\n      setMapZoom(10);\r\n    }\r\n  };\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n  if (error) return <div>{error}</div>;\r\n\r\n  const positions = historicalData.map(point => [point.latitude, point.longitude]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Historical View</h1>\r\n      <select onChange={handleDeviceSelect} value={selectedDevice || ''}>\r\n        <option value=\"\">Select a device</option>\r\n        {devices.map(device => (\r\n          <option key={device.id} value={device.id}>{device.name}</option>\r\n        ))}\r\n      </select>\r\n      <div className=\"map-container\">\r\n        <MapContainer center={mapCenter} zoom={mapZoom} style={{ height: '800px', width: '100%' }}>\r\n          <TileLayer\r\n            url=\"https://api.maptiler.com/maps/hybrid/{z}/{x}/{y}.jpg?key=jqMrtdwJOEd6ITEcglsi\"\r\n            attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n          />\r\n          {positions.length > 0 && <Polyline positions={positions} />}\r\n          {historicalData.map((point, index) => {\r\n            const device = devices.find(d => d.id === selectedDevice);\r\n            return (\r\n              <Marker \r\n                key={index} \r\n                position={[point.latitude, point.longitude]}\r\n                icon={device ? getDeviceIcon(device) : DefaultIcon}\r\n              >\r\n                <Popup>\r\n                  Timestamp: {new Date(point.timestamp).toLocaleString()}\r\n                </Popup>\r\n              </Marker>\r\n            );\r\n          })}\r\n          <FeatureGroup>\r\n            {geofences.map((geofence) => (\r\n              geofence && geofence.center && (\r\n                <Circle \r\n                  key={geofence.id} \r\n                  center={[parseFloat(geofence.center.lat) || 0, parseFloat(geofence.center.lng) || 0]} \r\n                  radius={parseFloat(geofence.radius) || 0} \r\n                  pathOptions={{ color: getGeofenceColor(geofence.type) }}\r\n                  id={geofence.id}\r\n                >\r\n                  <Popup>\r\n                    Geofence ID: {geofence.id}\r\n                  </Popup>\r\n                </Circle>\r\n              )\r\n            ))}\r\n          </FeatureGroup>\r\n        </MapContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HistoricalView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}