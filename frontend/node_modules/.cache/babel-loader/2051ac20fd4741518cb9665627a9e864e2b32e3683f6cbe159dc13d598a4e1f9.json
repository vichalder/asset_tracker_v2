{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\victo\\\\OneDrive\\\\Documents\\\\Smarte_projekter\\\\asset_tracker_v2\\\\frontend\\\\src\\\\pages\\\\HistoricalView.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { MapContainer, TileLayer, Polyline, Marker, Popup } from 'react-leaflet';\nimport axios from 'axios';\nimport 'leaflet/dist/leaflet.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HistoricalView() {\n  _s();\n  const [devices, setDevices] = useState([]);\n  const [selectedDevice, setSelectedDevice] = useState(null);\n  const [historicalData, setHistoricalData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [mapCenter, setMapCenter] = useState([55.828282, 10.605460]);\n  const [mapZoom, setMapZoom] = useState(7);\n  useEffect(() => {\n    const fetchDevices = async () => {\n      try {\n        const response = await axios.get('http://localhost:3000/api/devices');\n        setDevices(response.data);\n        setLoading(false);\n      } catch (err) {\n        setError('Error fetching devices. Please try again later.');\n        setLoading(false);\n      }\n    };\n    fetchDevices();\n  }, []);\n  const fetchHistoricalData = async deviceId => {\n    try {\n      const response = await axios.get(`http://localhost:3000/api/devices/${deviceId}/history`);\n      setHistoricalData(response.data);\n      adjustMapView(response.data);\n    } catch (err) {\n      setError('Error fetching historical data. Please try again later.');\n    }\n  };\n  const handleDeviceSelect = event => {\n    const deviceId = event.target.value;\n    setSelectedDevice(deviceId);\n    if (deviceId) {\n      fetchHistoricalData(deviceId);\n    } else {\n      setHistoricalData([]);\n      setMapCenter([55.828282, 10.605460]);\n      setMapZoom(7);\n    }\n  };\n  const adjustMapView = data => {\n    if (data.length > 0) {\n      const latitudes = data.map(point => point.latitude);\n      const longitudes = data.map(point => point.longitude);\n      const minLat = Math.min(...latitudes);\n      const maxLat = Math.max(...latitudes);\n      const minLng = Math.min(...longitudes);\n      const maxLng = Math.max(...longitudes);\n      setMapCenter([(minLat + maxLat) / 2, (minLng + maxLng) / 2]);\n      setMapZoom(10); // You might want to adjust this value based on the data spread\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 21\n  }, this);\n  const positions = historicalData.map(point => [point.latitude, point.longitude]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Historical View\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: handleDeviceSelect,\n      value: selectedDevice || '',\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select a device\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), devices.map(device => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: device.id,\n        children: device.name\n      }, device.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-container\",\n      children: /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: mapCenter,\n        zoom: mapZoom,\n        style: {\n          height: '800px',\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          url: \"https://api.maptiler.com/maps/hybrid/{z}/{x}/{y}.jpg?key=jqMrtdwJOEd6ITEcglsi\",\n          attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), positions.length > 0 && /*#__PURE__*/_jsxDEV(Polyline, {\n          positions: positions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 36\n        }, this), historicalData.map((point, index) => /*#__PURE__*/_jsxDEV(Marker, {\n          position: [point.latitude, point.longitude],\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: [\"Timestamp: \", new Date(point.timestamp).toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_s(HistoricalView, \"7UMinviQa8eUo/VSk9+2llU3edE=\");\n_c = HistoricalView;\nexport default HistoricalView;\nvar _c;\n$RefreshReg$(_c, \"HistoricalView\");","map":{"version":3,"names":["React","useState","useEffect","MapContainer","TileLayer","Polyline","Marker","Popup","axios","jsxDEV","_jsxDEV","HistoricalView","_s","devices","setDevices","selectedDevice","setSelectedDevice","historicalData","setHistoricalData","loading","setLoading","error","setError","mapCenter","setMapCenter","mapZoom","setMapZoom","fetchDevices","response","get","data","err","fetchHistoricalData","deviceId","adjustMapView","handleDeviceSelect","event","target","value","length","latitudes","map","point","latitude","longitudes","longitude","minLat","Math","min","maxLat","max","minLng","maxLng","children","fileName","_jsxFileName","lineNumber","columnNumber","positions","onChange","device","id","name","className","center","zoom","style","height","width","url","attribution","index","position","Date","timestamp","toLocaleString","_c","$RefreshReg$"],"sources":["C:/Users/victo/OneDrive/Documents/Smarte_projekter/asset_tracker_v2/frontend/src/pages/HistoricalView.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { MapContainer, TileLayer, Polyline, Marker, Popup } from 'react-leaflet';\r\nimport axios from 'axios';\r\nimport 'leaflet/dist/leaflet.css';\r\n\r\nfunction HistoricalView() {\r\n  const [devices, setDevices] = useState([]);\r\n  const [selectedDevice, setSelectedDevice] = useState(null);\r\n  const [historicalData, setHistoricalData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [mapCenter, setMapCenter] = useState([55.828282, 10.605460]);\r\n  const [mapZoom, setMapZoom] = useState(7);\r\n\r\n  useEffect(() => {\r\n    const fetchDevices = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:3000/api/devices');\r\n        setDevices(response.data);\r\n        setLoading(false);\r\n      } catch (err) {\r\n        setError('Error fetching devices. Please try again later.');\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchDevices();\r\n  }, []);\r\n\r\n  const fetchHistoricalData = async (deviceId) => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:3000/api/devices/${deviceId}/history`);\r\n      setHistoricalData(response.data);\r\n      adjustMapView(response.data);\r\n    } catch (err) {\r\n      setError('Error fetching historical data. Please try again later.');\r\n    }\r\n  };\r\n\r\n  const handleDeviceSelect = (event) => {\r\n    const deviceId = event.target.value;\r\n    setSelectedDevice(deviceId);\r\n    if (deviceId) {\r\n      fetchHistoricalData(deviceId);\r\n    } else {\r\n      setHistoricalData([]);\r\n      setMapCenter([55.828282, 10.605460]);\r\n      setMapZoom(7);\r\n    }\r\n  };\r\n\r\n  const adjustMapView = (data) => {\r\n    if (data.length > 0) {\r\n      const latitudes = data.map(point => point.latitude);\r\n      const longitudes = data.map(point => point.longitude);\r\n      const minLat = Math.min(...latitudes);\r\n      const maxLat = Math.max(...latitudes);\r\n      const minLng = Math.min(...longitudes);\r\n      const maxLng = Math.max(...longitudes);\r\n      \r\n      setMapCenter([(minLat + maxLat) / 2, (minLng + maxLng) / 2]);\r\n      setMapZoom(10); // You might want to adjust this value based on the data spread\r\n    }\r\n  };\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n  if (error) return <div>{error}</div>;\r\n\r\n  const positions = historicalData.map(point => [point.latitude, point.longitude]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Historical View</h1>\r\n      <select onChange={handleDeviceSelect} value={selectedDevice || ''}>\r\n        <option value=\"\">Select a device</option>\r\n        {devices.map(device => (\r\n          <option key={device.id} value={device.id}>{device.name}</option>\r\n        ))}\r\n      </select>\r\n      <div className=\"map-container\">\r\n        <MapContainer center={mapCenter} zoom={mapZoom} style={{ height: '800px', width: '100%' }}>\r\n          <TileLayer\r\n            url=\"https://api.maptiler.com/maps/hybrid/{z}/{x}/{y}.jpg?key=jqMrtdwJOEd6ITEcglsi\"\r\n            attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n          />\r\n          {positions.length > 0 && <Polyline positions={positions} />}\r\n          {historicalData.map((point, index) => (\r\n            <Marker key={index} position={[point.latitude, point.longitude]}>\r\n              <Popup>\r\n                Timestamp: {new Date(point.timestamp).toLocaleString()}\r\n              </Popup>\r\n            </Marker>\r\n          ))}\r\n        </MapContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HistoricalView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}