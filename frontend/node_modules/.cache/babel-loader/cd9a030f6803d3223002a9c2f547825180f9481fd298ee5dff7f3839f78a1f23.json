{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\victo\\\\OneDrive\\\\Documents\\\\Smarte_projekter\\\\asset_tracker_v2\\\\frontend\\\\src\\\\pages\\\\Geofencing.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { MapContainer, TileLayer, FeatureGroup, Circle, Tooltip } from 'react-leaflet';\nimport { EditControl } from \"react-leaflet-draw\";\nimport axios from 'axios';\nimport 'leaflet/dist/leaflet.css';\nimport 'leaflet-draw/dist/leaflet.draw.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://localhost:3000/api';\nfunction Geofencing() {\n  _s();\n  const [geofences, setGeofences] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchGeofences = async () => {\n      try {\n        const response = await axios.get(`${API_BASE_URL}/geofences`);\n        console.log('Fetched geofences:', response.data);\n        setGeofences(response.data);\n        setLoading(false);\n      } catch (err) {\n        console.error('Error fetching geofences:', err);\n        setError('Error fetching geofences. Please try again later.');\n        setLoading(false);\n      }\n    };\n    fetchGeofences();\n  }, []);\n  const handleCreated = async e => {\n    const {\n      layer\n    } = e;\n    const {\n      _latlng,\n      _mRadius\n    } = layer;\n    const newGeofence = {\n      center: _latlng,\n      radius: _mRadius,\n      type: 'entering'\n    };\n    try {\n      const response = await axios.post(`${API_BASE_URL}/geofences`, newGeofence);\n      const createdGeofence = response.data;\n      setGeofences(prevGeofences => [...prevGeofences, createdGeofence]);\n      layer.options.id = createdGeofence.id;\n      layer.options.type = createdGeofence.type;\n      console.log('Created geofence:', createdGeofence);\n    } catch (err) {\n      console.error('Error creating geofence:', err);\n      setError('Error creating geofence. Please try again.');\n    }\n  };\n  const handleEdited = async e => {\n    const {\n      layers\n    } = e;\n    console.log('Editing layers:', layers);\n    layers.eachLayer(async layer => {\n      const {\n        _latlng,\n        _mRadius\n      } = layer;\n      const geofenceId = layer.options.id;\n      const geofenceType = layer.options.type;\n      console.log('Editing geofence:', geofenceId, 'with latlng:', _latlng, 'radius:', _mRadius, 'and type:', geofenceType);\n      if (geofenceId === undefined) {\n        console.error('Geofence ID is undefined for layer:', layer);\n        setError('Error updating geofence: ID not found');\n        return;\n      }\n      const updatedGeofence = {\n        center: _latlng,\n        radius: _mRadius,\n        type: geofenceType\n      };\n      try {\n        const response = await axios.put(`${API_BASE_URL}/geofences/${geofenceId}`, updatedGeofence);\n        console.log('Update response:', response.data);\n        setGeofences(prevGeofences => prevGeofences.map(g => g.id === geofenceId ? {\n          ...g,\n          ...updatedGeofence\n        } : g));\n        console.log('Successfully updated geofence:', geofenceId);\n      } catch (err) {\n        console.error('Error updating geofence:', err);\n        setError('Error updating geofence. Please try again.');\n      }\n    });\n  };\n  const handleDeleted = async e => {\n    const {\n      layers\n    } = e;\n    layers.eachLayer(async layer => {\n      const geofenceId = layer.options.id;\n      console.log('Deleting geofence:', geofenceId);\n      if (geofenceId === undefined) {\n        console.error('Geofence ID is undefined for layer:', layer);\n        setError('Error deleting geofence: ID not found');\n        return;\n      }\n      try {\n        await axios.delete(`${API_BASE_URL}/geofences/${geofenceId}`);\n        setGeofences(prevGeofences => prevGeofences.filter(g => g.id !== geofenceId));\n        console.log('Successfully deleted geofence:', geofenceId);\n      } catch (err) {\n        console.error('Error deleting geofence:', err);\n        setError('Error deleting geofence. Please try again.');\n      }\n    });\n  };\n  const getGeofenceColor = type => {\n    return type === 'entering' ? 'blue' : 'orange';\n  };\n  const toggleGeofenceType = async geofence => {\n    const newType = geofence.type === 'entering' ? 'exiting' : 'entering';\n    const updatedGeofence = {\n      ...geofence,\n      type: newType\n    };\n    try {\n      const response = await axios.put(`${API_BASE_URL}/geofences/${geofence.id}`, updatedGeofence);\n      console.log('Update response:', response.data);\n      setGeofences(prevGeofences => prevGeofences.map(g => g.id === geofence.id ? {\n        ...g,\n        type: newType\n      } : g));\n      console.log('Successfully updated geofence type:', geofence.id);\n    } catch (err) {\n      console.error('Error updating geofence type:', err);\n      setError('Error updating geofence type. Please try again.');\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Geofencing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-container\",\n      children: /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: [55.828282, 10.605460],\n        zoom: 7,\n        style: {\n          height: '800px',\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          url: \"https://api.maptiler.com/maps/hybrid/{z}/{x}/{y}.jpg?key=jqMrtdwJOEd6ITEcglsi\",\n          attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FeatureGroup, {\n          children: [/*#__PURE__*/_jsxDEV(EditControl, {\n            position: \"topright\",\n            onCreated: handleCreated,\n            onEdited: handleEdited,\n            onDeleted: handleDeleted,\n            draw: {\n              rectangle: false,\n              polygon: false,\n              polyline: false,\n              marker: false,\n              circlemarker: false,\n              circle: {\n                shapeOptions: {\n                  color: 'blue'\n                }\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this), geofences.map(geofence => geofence && geofence.center && /*#__PURE__*/_jsxDEV(Circle, {\n            center: [parseFloat(geofence.center.lat) || 0, parseFloat(geofence.center.lng) || 0],\n            radius: parseFloat(geofence.radius) || 0,\n            pathOptions: {\n              color: getGeofenceColor(geofence.type)\n            },\n            id: geofence.id,\n            type: geofence.type,\n            children: /*#__PURE__*/_jsxDEV(Tooltip, {\n              permanent: true,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"Geofence ID: \", geofence.id]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => toggleGeofenceType(geofence),\n                children: \"Toggle Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 19\n            }, this)\n          }, geofence.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Geofences:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: geofences.map(geofence => geofence && geofence.center && /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"ID: \", geofence.id, \" - Center: \", parseFloat(geofence.center.lat).toFixed(6), \", \", parseFloat(geofence.center.lng).toFixed(6), \" - Radius: \", parseFloat(geofence.radius).toFixed(2), \"m - Type: \", geofence.type, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => toggleGeofenceType(geofence),\n            children: \"Toggle Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 17\n          }, this)]\n        }, geofence.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n}\n_s(Geofencing, \"akbVHjSd/P4sTa+FSJElPn44NV0=\");\n_c = Geofencing;\nexport default Geofencing;\nvar _c;\n$RefreshReg$(_c, \"Geofencing\");","map":{"version":3,"names":["React","useState","useEffect","MapContainer","TileLayer","FeatureGroup","Circle","Tooltip","EditControl","axios","jsxDEV","_jsxDEV","API_BASE_URL","Geofencing","_s","geofences","setGeofences","loading","setLoading","error","setError","fetchGeofences","response","get","console","log","data","err","handleCreated","e","layer","_latlng","_mRadius","newGeofence","center","radius","type","post","createdGeofence","prevGeofences","options","id","handleEdited","layers","eachLayer","geofenceId","geofenceType","undefined","updatedGeofence","put","map","g","handleDeleted","delete","filter","getGeofenceColor","toggleGeofenceType","geofence","newType","children","fileName","_jsxFileName","lineNumber","columnNumber","className","zoom","style","height","width","url","attribution","position","onCreated","onEdited","onDeleted","draw","rectangle","polygon","polyline","marker","circlemarker","circle","shapeOptions","color","parseFloat","lat","lng","pathOptions","permanent","onClick","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/victo/OneDrive/Documents/Smarte_projekter/asset_tracker_v2/frontend/src/pages/Geofencing.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { MapContainer, TileLayer, FeatureGroup, Circle, Tooltip } from 'react-leaflet';\r\nimport { EditControl } from \"react-leaflet-draw\";\r\nimport axios from 'axios';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport 'leaflet-draw/dist/leaflet.draw.css';\r\n\r\nconst API_BASE_URL = 'http://localhost:3000/api';\r\n\r\nfunction Geofencing() {\r\n  const [geofences, setGeofences] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchGeofences = async () => {\r\n      try {\r\n        const response = await axios.get(`${API_BASE_URL}/geofences`);\r\n        console.log('Fetched geofences:', response.data);\r\n        setGeofences(response.data);\r\n        setLoading(false);\r\n      } catch (err) {\r\n        console.error('Error fetching geofences:', err);\r\n        setError('Error fetching geofences. Please try again later.');\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchGeofences();\r\n  }, []);\r\n\r\n  const handleCreated = async (e) => {\r\n    const { layer } = e;\r\n    const { _latlng, _mRadius } = layer;\r\n    const newGeofence = { center: _latlng, radius: _mRadius, type: 'entering' };\r\n    \r\n    try {\r\n      const response = await axios.post(`${API_BASE_URL}/geofences`, newGeofence);\r\n      const createdGeofence = response.data;\r\n      setGeofences(prevGeofences => [...prevGeofences, createdGeofence]);\r\n      layer.options.id = createdGeofence.id;\r\n      layer.options.type = createdGeofence.type;\r\n      console.log('Created geofence:', createdGeofence);\r\n    } catch (err) {\r\n      console.error('Error creating geofence:', err);\r\n      setError('Error creating geofence. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleEdited = async (e) => {\r\n    const { layers } = e;\r\n    console.log('Editing layers:', layers);\r\n    layers.eachLayer(async (layer) => {\r\n      const { _latlng, _mRadius } = layer;\r\n      const geofenceId = layer.options.id;\r\n      const geofenceType = layer.options.type;\r\n      console.log('Editing geofence:', geofenceId, 'with latlng:', _latlng, 'radius:', _mRadius, 'and type:', geofenceType);\r\n      \r\n      if (geofenceId === undefined) {\r\n        console.error('Geofence ID is undefined for layer:', layer);\r\n        setError('Error updating geofence: ID not found');\r\n        return;\r\n      }\r\n\r\n      const updatedGeofence = { center: _latlng, radius: _mRadius, type: geofenceType };\r\n      \r\n      try {\r\n        const response = await axios.put(`${API_BASE_URL}/geofences/${geofenceId}`, updatedGeofence);\r\n        console.log('Update response:', response.data);\r\n        setGeofences(prevGeofences => \r\n          prevGeofences.map(g => g.id === geofenceId ? { ...g, ...updatedGeofence } : g)\r\n        );\r\n        console.log('Successfully updated geofence:', geofenceId);\r\n      } catch (err) {\r\n        console.error('Error updating geofence:', err);\r\n        setError('Error updating geofence. Please try again.');\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleDeleted = async (e) => {\r\n    const { layers } = e;\r\n    layers.eachLayer(async (layer) => {\r\n      const geofenceId = layer.options.id;\r\n      console.log('Deleting geofence:', geofenceId);\r\n      \r\n      if (geofenceId === undefined) {\r\n        console.error('Geofence ID is undefined for layer:', layer);\r\n        setError('Error deleting geofence: ID not found');\r\n        return;\r\n      }\r\n      \r\n      try {\r\n        await axios.delete(`${API_BASE_URL}/geofences/${geofenceId}`);\r\n        setGeofences(prevGeofences => prevGeofences.filter(g => g.id !== geofenceId));\r\n        console.log('Successfully deleted geofence:', geofenceId);\r\n      } catch (err) {\r\n        console.error('Error deleting geofence:', err);\r\n        setError('Error deleting geofence. Please try again.');\r\n      }\r\n    });\r\n  };\r\n\r\n  const getGeofenceColor = (type) => {\r\n    return type === 'entering' ? 'blue' : 'orange';\r\n  };\r\n\r\n  const toggleGeofenceType = async (geofence) => {\r\n    const newType = geofence.type === 'entering' ? 'exiting' : 'entering';\r\n    const updatedGeofence = { ...geofence, type: newType };\r\n    \r\n    try {\r\n      const response = await axios.put(`${API_BASE_URL}/geofences/${geofence.id}`, updatedGeofence);\r\n      console.log('Update response:', response.data);\r\n      setGeofences(prevGeofences => \r\n        prevGeofences.map(g => g.id === geofence.id ? { ...g, type: newType } : g)\r\n      );\r\n      console.log('Successfully updated geofence type:', geofence.id);\r\n    } catch (err) {\r\n      console.error('Error updating geofence type:', err);\r\n      setError('Error updating geofence type. Please try again.');\r\n    }\r\n  };\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n  if (error) return <div>{error}</div>;\r\n\r\n  return (\r\n    <div>\r\n      <h1>Geofencing</h1>\r\n      <div className=\"map-container\">\r\n        <MapContainer center={[55.828282, 10.605460]} zoom={7} style={{ height: '800px', width: '100%' }}>\r\n          <TileLayer\r\n            url=\"https://api.maptiler.com/maps/hybrid/{z}/{x}/{y}.jpg?key=jqMrtdwJOEd6ITEcglsi\"\r\n            attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n          />\r\n          <FeatureGroup>\r\n            <EditControl\r\n              position=\"topright\"\r\n              onCreated={handleCreated}\r\n              onEdited={handleEdited}\r\n              onDeleted={handleDeleted}\r\n              draw={{\r\n                rectangle: false,\r\n                polygon: false,\r\n                polyline: false,\r\n                marker: false,\r\n                circlemarker: false,\r\n                circle: { shapeOptions: { color: 'blue' } }\r\n              }}\r\n            />\r\n            {geofences.map((geofence) => (\r\n              geofence && geofence.center && (\r\n                <Circle \r\n                  key={geofence.id} \r\n                  center={[parseFloat(geofence.center.lat) || 0, parseFloat(geofence.center.lng) || 0]} \r\n                  radius={parseFloat(geofence.radius) || 0} \r\n                  pathOptions={{ color: getGeofenceColor(geofence.type) }}\r\n                  id={geofence.id}\r\n                  type={geofence.type}\r\n                >\r\n                  <Tooltip permanent>\r\n                    <span>Geofence ID: {geofence.id}</span>\r\n                    <button onClick={() => toggleGeofenceType(geofence)}>Toggle Type</button>\r\n                  </Tooltip>\r\n                </Circle>\r\n              )\r\n            ))}\r\n          </FeatureGroup>\r\n        </MapContainer>\r\n      </div>\r\n      <div>\r\n        <h2>Geofences:</h2>\r\n        <ul>\r\n          {geofences.map((geofence) => (\r\n            geofence && geofence.center && (\r\n              <li key={geofence.id}>\r\n                ID: {geofence.id} - \r\n                Center: {parseFloat(geofence.center.lat).toFixed(6)}, {parseFloat(geofence.center.lng).toFixed(6)} - \r\n                Radius: {parseFloat(geofence.radius).toFixed(2)}m - \r\n                Type: {geofence.type}\r\n                <button onClick={() => toggleGeofenceType(geofence)}>Toggle Type</button>\r\n              </li>\r\n            )\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Geofencing;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}